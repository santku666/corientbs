{"ast":null,"code":"import axios from \"axios\";\n\n/**\r\n * ----------------------------------\r\n *  creating axios config default\r\n * ----------------------------------\r\n * */\nconst axiosInst = axios.create({\n  baseURL: \"http://localhost/corientbs/server/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n/**\r\n * ------------------------------------------\r\n *  creating call api function with axios\r\n * -----------------------------------------\r\n * */\nasync function CallApi(url, method, data, headers) {\n  try {\n    const options = {\n      url: url,\n      method: method,\n      data: data,\n      headers: headers,\n      mode: \"cors\"\n    };\n    const response = await axiosInst(options);\n    return response.data;\n  } catch (error) {\n    console.log(\"Axios Error Occured url ,method ,data ,headers\"[(url, method, data, headers)]);\n    throw error;\n  }\n}\n\n/**\r\n * ###################################\r\n *     exposed methods for interface\r\n * ##################################\r\n * */\n_c = CallApi;\nexport const GET = function (path) {\n  let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return CallApi(path, \"GET\", headers);\n};\n_c2 = GET;\nexport const POST = function (path, data) {\n  let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return CallApi(path, \"POST\", data, headers);\n};\n_c3 = POST;\nexport const PUT = function (path, data) {\n  let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return CallApi(path, \"PUT\", data, headers);\n};\n_c4 = PUT;\nexport const DELETE = function (path) {\n  let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return CallApi(path, \"DELETE\", headers);\n};\n_c5 = DELETE;\nexport default axiosInst; //default file export\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CallApi\");\n$RefreshReg$(_c2, \"GET\");\n$RefreshReg$(_c3, \"POST\");\n$RefreshReg$(_c4, \"PUT\");\n$RefreshReg$(_c5, \"DELETE\");","map":{"version":3,"names":["axios","axiosInst","create","baseURL","headers","CallApi","url","method","data","options","mode","response","error","console","log","_c","GET","path","arguments","length","undefined","_c2","POST","_c3","PUT","_c4","DELETE","_c5","$RefreshReg$"],"sources":["C:/xampp/htdocs/corientbs/library/src/utilities/apiHelper.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n/**\r\n * ----------------------------------\r\n *  creating axios config default\r\n * ----------------------------------\r\n * */ \r\nconst axiosInst=axios.create({\r\n    baseURL:\"http://localhost/corientbs/server/api\",\r\n    headers:{\r\n        \"Content-Type\":\"application/json\"\r\n    }\r\n});\r\n\r\n/**\r\n * ------------------------------------------\r\n *  creating call api function with axios\r\n * -----------------------------------------\r\n * */ \r\nasync function CallApi(url,method,data,headers){\r\n    try {\r\n        const options={\r\n            url:url,\r\n            method:method,\r\n            data:data,\r\n            headers:headers,\r\n            mode:\"cors\"\r\n        };\r\n        const response=await axiosInst(options);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(\"Axios Error Occured url ,method ,data ,headers\"[\r\n            url,method,data,headers\r\n        ]);\r\n        throw error;\r\n    }\r\n}\r\n\r\n/**\r\n * ###################################\r\n *     exposed methods for interface\r\n * ##################################\r\n * */ \r\nexport const GET = (path,headers={})=>CallApi(path,\"GET\",headers);\r\nexport const POST = (path,data,headers={})=>CallApi(path,\"POST\",data,headers);\r\nexport const PUT = (path,data,headers={})=>CallApi(path,\"PUT\",data,headers);\r\nexport const DELETE =(path,headers={})=>CallApi(path,\"DELETE\",headers);\r\n\r\nexport default axiosInst; //default file export"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAACD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAC,uCAAuC;EAC/CC,OAAO,EAAC;IACJ,cAAc,EAAC;EACnB;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,eAAeC,OAAOA,CAACC,GAAG,EAACC,MAAM,EAACC,IAAI,EAACJ,OAAO,EAAC;EAC3C,IAAI;IACA,MAAMK,OAAO,GAAC;MACVH,GAAG,EAACA,GAAG;MACPC,MAAM,EAACA,MAAM;MACbC,IAAI,EAACA,IAAI;MACTJ,OAAO,EAACA,OAAO;MACfM,IAAI,EAAC;IACT,CAAC;IACD,MAAMC,QAAQ,GAAC,MAAMV,SAAS,CAACQ,OAAO,CAAC;IACvC,OAAOE,QAAQ,CAACH,IAAI;EACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EACxDR,GAAG,EAACC,MAAM,EAACC,IAAI,EAACJ,OAAO,EAC1B,CAAC;IACF,MAAMQ,KAAK;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AAJAG,EAAA,GAnBeV,OAAO;AAwBtB,OAAO,MAAMW,GAAG,GAAG,SAAAA,CAACC,IAAI;EAAA,IAACb,OAAO,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,OAAGb,OAAO,CAACY,IAAI,EAAC,KAAK,EAACb,OAAO,CAAC;AAAA;AAACiB,GAAA,GAArDL,GAAG;AAChB,OAAO,MAAMM,IAAI,GAAG,SAAAA,CAACL,IAAI,EAACT,IAAI;EAAA,IAACJ,OAAO,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,OAAGb,OAAO,CAACY,IAAI,EAAC,MAAM,EAACT,IAAI,EAACJ,OAAO,CAAC;AAAA;AAACmB,GAAA,GAAjED,IAAI;AACjB,OAAO,MAAME,GAAG,GAAG,SAAAA,CAACP,IAAI,EAACT,IAAI;EAAA,IAACJ,OAAO,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,OAAGb,OAAO,CAACY,IAAI,EAAC,KAAK,EAACT,IAAI,EAACJ,OAAO,CAAC;AAAA;AAACqB,GAAA,GAA/DD,GAAG;AAChB,OAAO,MAAME,MAAM,GAAE,SAAAA,CAACT,IAAI;EAAA,IAACb,OAAO,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAA,OAAGb,OAAO,CAACY,IAAI,EAAC,QAAQ,EAACb,OAAO,CAAC;AAAA;AAACuB,GAAA,GAA1DD,MAAM;AAEnB,eAAezB,SAAS,CAAC,CAAC;AAAA,IAAAc,EAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}